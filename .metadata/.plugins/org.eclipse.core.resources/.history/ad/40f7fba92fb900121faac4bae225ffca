package com.w9jds.eveprofiler;

import java.util.ArrayList;
import java.util.List;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;

import android.content.SharedPreferences;
import android.os.AsyncTask;

public class CallApi extends AsyncTask<ArrayList<Object>, Void, ArrayList<CharacterInfo>>{
		
	MainActivity Main = new MainActivity();
	String ApiCalled = "";
	
	protected ArrayList<CharacterInfo> doInBackground(ArrayList<Object>... Info)
	{
		ArrayList<CharacterInfo> Characters = new ArrayList<CharacterInfo>();
		Main = (MainActivity)Info[0].get(1);
		
		if (Info[0].get(0) == "getCharacters")
		{
			
			
			
			
		}
		
		
		
		
		
		
		
		
		final class asyncClass {
			
			String responseString = "";
			public String ApiCall(ArrayList<String> Params, ArrayList<String> Keys, MainActivity Main){
				try {
						
					// Create a new HttpClient and Post Header
					HttpClient httpclient = new DefaultHttpClient();
					HttpPost httppost = new HttpPost();
					
					ApiCalled = Params.get(0);
					
					switch(Params.size())
					{
//						case 1:
//							httppost = new HttpPost();
//							break;
						case 1:
							httppost = new HttpPost(Main.getString(R.string.Api_Uri) + Params.get(0));
							break;
						case 2:
							httppost = new HttpPost(Main.getString(R.string.Api_Uri) + Params.get(0) + Params.get(0));
							break;
					}
					
				    // Add your data
				    List<NameValuePair> nameValuePairs;
				    
			        SharedPreferences settings = Main.getSharedPreferences("ApiKeys", 0);
			        String keyid = settings.getString("keyid", null);
			        String vCode = settings.getString("vCode", null);
				    
				    switch(Keys.size())
				    {
//					    case 2:
//				    		nameValuePairs = new ArrayList<NameValuePair>(1);
//				    		nameValuePairs.add(new BasicNameValuePair(ApiInfo.get(1).get(0).toString(), ApiInfo.get(1).get(1).toString()));
//				    		httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
//				    		break;
				    
				    	case 0:
				    		nameValuePairs = new ArrayList<NameValuePair>(2);
				    		nameValuePairs.add(new BasicNameValuePair("keyID", keyid));
				    		nameValuePairs.add(new BasicNameValuePair("vCode", vCode));
				    		httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
				    		break;
				    		
				    	case 1:
				    		nameValuePairs = new ArrayList<NameValuePair>(3);
				    		nameValuePairs.add(new BasicNameValuePair("keyID", keyid));
				    		nameValuePairs.add(new BasicNameValuePair("vCode", vCode));
				    		nameValuePairs.add(new BasicNameValuePair("characterID", Keys.get(0)));
				    		httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
				    }
		
				    		    // Execute HTTP Post Request
				    HttpResponse response = httpclient.execute(httppost);
				    HttpEntity entity = response.getEntity();
				    responseString = EntityUtils.toString(entity);
				} 
				catch (Exception e){ System.out.println(e); }
	
			    return responseString;
			}
			
			
			
			
			
			
			
		}

		
		
		return Characters;
	}
	
	protected void onPostExecute(ArrayList<CharacterInfo> result)
	{
		Main.ApiResponse(result, ApiCalled);
	}
}